---
# This playbook can be used to patch and reboot all nodes in the central elasticsearch cluster, node by node.
# It can be augmented with whatever other actions are required throughout the cluster.
- name: Do rolling restart of ES nodes
  hosts: sundryhosts
  serial: 1
  tasks:
    - name: disable cluster routing
      shell: "curl -XPUT -H 'Content-Type: application/json' http://{{ private_ip }}:9200/_cluster/settings -d '{\"transient\" : {\"cluster.routing.allocation.enable\" : \"none\" }}'"
      register: result
      until: result.stdout.find('"acknowledged"') != -1
      retries: 200
      delay: 3
      changed_when: result.stdout.find('"acknowledged":true') != -1

    - name: apply all outstanding patches except elasticsearch
      yum: 
        name: '*'
        state: latest
        exclude: elasticsearch

    - name: Restart host
      shell: sleep 2 && shutdown -r now
      async: 1
      poll: 0

    - name: wait for host to become available
      wait_for_connection:
        delay: 60
        timeout: 300

    - name: wait for node to restart
      shell: "curl -I -s -m 2 http://{{ private_ip }}:9200 | head -n 1"
      register: result
      until: result.stdout == "HTTP/1.1 200 OK"
      retries: 200
      delay: 3

    - name: enable cluster routing
      shell: "curl -XPUT -H 'Content-Type: application/json' http://{{ private_ip }}:9200/_cluster/settings -d '{\"transient\" : {\"cluster.routing.allocation.enable\" : \"all\" }}'"
      register: result
      until: result.stdout.find('"acknowledged"') != -1
      retries: 200
      delay: 3
      changed_when: result.stdout.find('"acknowledged":true') != -1

    - name: wait for cluster to stabilize
      shell: "curl -s -m 2 http://{{ private_ip }}:9200/_cat/health | cut -d ' ' -f 4"
      register: result
      until: result.stdout.find("green") != -1
      retries: 200
      delay: 30
