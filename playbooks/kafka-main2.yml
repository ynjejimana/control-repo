---
- name: Add group "kafka"
  group: name={{ kafka_group }} system=yes

- name: Add user "kafka"
  user: name={{ kafka_user }} group={{ kafka_group }} shell=/sbin/nologin system=yes

- name: Download the tarball
  get_url: url="http://{{ apache_mirror }}/kafka/{{ kafka_version }}/kafka_2.11-{{ kafka_version }}.tgz" dest={{ kafka_root_dir }}/kafka_2.11-{{ kafka_version }}.tgz

- name: Extract the tarball
  unarchive: src={{ kafka_root_dir }}/kafka_2.11-{{ kafka_version }}.tgz dest={{ kafka_root_dir }}/ copy=no creates={{ kafka_root_dir }}/kafka_2.11-{{ kafka_version }}

- name: Symlink install directory
  file: src={{ kafka_root_dir }}/kafka_2.11-{{ kafka_version }} path={{ kafka_root_dir }}/kafka state=link

- name: Set permissions to Kafka folder
  file: path={{ kafka_root_dir }}/kafka/ owner=root group=root recurse=yes

- name: Create kafka data directory
  file: path={{ kafka_data_dir }} state=directory owner={{ kafka_user }} group={{ kafka_group }}
  when: data_disks_devices is not defined or not data_disks_devices or data_disks_devices|length <= 0

- name: Create /disk/{0..n}/kafka/data directories
  file: path="/disk/{{ item.0 + 1 }}/kafka/data" state=directory owner={{ kafka_user }} group={{ kafka_group }}
  with_indexed_items: "{{ data_disks_devices }}"
  when: data_disks_devices is defined and data_disks_devices

- name: Create Kafka log directory
  file: path={{ kafka_log_dir }} state=directory owner={{ kafka_user }} group={{ kafka_group }}

- name: Link the log directory
  file: src={{ kafka_log_dir }} path={{ kafka_root_dir }}/kafka/logs state=link

- name: Create Kafka conf directory
  file: path={{ kafka_conf_dir }} state=directory owner=root group=root mode=755

- name: Link the config directory
  file: src={{ kafka_conf_dir }} path={{ kafka_root_dir }}/config state=link

- name: Create defaults file with JVM variables
  copy: src=kafka dest=/etc/default/kafka owner=root group=root mode=644

- name: Install Kafka init script
  template: src=kafka.j2 dest=/etc/systemd/system/kafka.service mode=0644
  notify: Reload systemd

- meta: flush_handlers

- name: Configure Kafka server
  template: src={{ item.src }} dest="{{ item.dest }}"
  with_items:
    - {src: 'consumer.properties.j2',dest: '{{kafka_conf_dir}}/consumer.properties'}
    - {src: 'producer.properties.j2',dest: '{{kafka_conf_dir}}/producer.properties'}
    - {src: 'server.properties.j2',dest: '{{kafka_conf_dir}}/server.properties'}
  notify: Restart kafka

- name: Upload kafka configs
  copy: src={{ item }} dest="{{ kafka_conf_dir }}/" owner=root group=root mode=644
  with_items:
    - connect-console-sink.properties
    - connect-console-source.properties
    - connect-distributed.properties
    - connect-file-sink.properties
    - connect-file-source.properties
    - connect-log4j.properties
    - connect-standalone.properties
    - log4j.properties
    - tools-log4j.properties
    - zookeeper.properties
  notify: Restart kafka

- meta: flush_handlers

- name: Make sure Kafka is running
  service: name=kafka enabled=yes state=started

- name: Add Kafka binaries to PATH
  template: src=kafka.sh.j2 dest=/etc/profile.d/kafka.sh owner=root group=root mode=644
